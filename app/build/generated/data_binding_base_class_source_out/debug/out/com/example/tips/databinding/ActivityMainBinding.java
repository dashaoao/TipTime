// Generated by view binder compiler. Do not edit!
package com.example.tips.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tips.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button calculateButton;

  @NonNull
  public final TextInputLayout costOfService;

  @NonNull
  public final TextInputEditText costOfServiceEditText;

  @NonNull
  public final TextInputLayout desc;

  @NonNull
  public final TextInputEditText descEditText;

  @NonNull
  public final ImageView iconCostOfService;

  @NonNull
  public final ImageView iconDesc;

  @NonNull
  public final ImageView iconRoundUpSwitch;

  @NonNull
  public final ImageView iconServiceQuestion;

  @NonNull
  public final CheckBox optionEighteenPercent;

  @NonNull
  public final CheckBox optionFifteenPercent;

  @NonNull
  public final CheckBox optionTwentyPercent;

  @NonNull
  public final SwitchMaterial roundUpSwitch;

  @NonNull
  public final TextView serviceQuestion;

  @NonNull
  public final LinearLayout tipOptions;

  @NonNull
  public final TextView tipResult;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull Button calculateButton,
      @NonNull TextInputLayout costOfService, @NonNull TextInputEditText costOfServiceEditText,
      @NonNull TextInputLayout desc, @NonNull TextInputEditText descEditText,
      @NonNull ImageView iconCostOfService, @NonNull ImageView iconDesc,
      @NonNull ImageView iconRoundUpSwitch, @NonNull ImageView iconServiceQuestion,
      @NonNull CheckBox optionEighteenPercent, @NonNull CheckBox optionFifteenPercent,
      @NonNull CheckBox optionTwentyPercent, @NonNull SwitchMaterial roundUpSwitch,
      @NonNull TextView serviceQuestion, @NonNull LinearLayout tipOptions,
      @NonNull TextView tipResult) {
    this.rootView = rootView;
    this.calculateButton = calculateButton;
    this.costOfService = costOfService;
    this.costOfServiceEditText = costOfServiceEditText;
    this.desc = desc;
    this.descEditText = descEditText;
    this.iconCostOfService = iconCostOfService;
    this.iconDesc = iconDesc;
    this.iconRoundUpSwitch = iconRoundUpSwitch;
    this.iconServiceQuestion = iconServiceQuestion;
    this.optionEighteenPercent = optionEighteenPercent;
    this.optionFifteenPercent = optionFifteenPercent;
    this.optionTwentyPercent = optionTwentyPercent;
    this.roundUpSwitch = roundUpSwitch;
    this.serviceQuestion = serviceQuestion;
    this.tipOptions = tipOptions;
    this.tipResult = tipResult;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calculate_button;
      Button calculateButton = ViewBindings.findChildViewById(rootView, id);
      if (calculateButton == null) {
        break missingId;
      }

      id = R.id.cost_of_service;
      TextInputLayout costOfService = ViewBindings.findChildViewById(rootView, id);
      if (costOfService == null) {
        break missingId;
      }

      id = R.id.cost_of_service_edit_text;
      TextInputEditText costOfServiceEditText = ViewBindings.findChildViewById(rootView, id);
      if (costOfServiceEditText == null) {
        break missingId;
      }

      id = R.id.desc;
      TextInputLayout desc = ViewBindings.findChildViewById(rootView, id);
      if (desc == null) {
        break missingId;
      }

      id = R.id.desc_edit_text;
      TextInputEditText descEditText = ViewBindings.findChildViewById(rootView, id);
      if (descEditText == null) {
        break missingId;
      }

      id = R.id.icon_cost_of_service;
      ImageView iconCostOfService = ViewBindings.findChildViewById(rootView, id);
      if (iconCostOfService == null) {
        break missingId;
      }

      id = R.id.icon_desc;
      ImageView iconDesc = ViewBindings.findChildViewById(rootView, id);
      if (iconDesc == null) {
        break missingId;
      }

      id = R.id.icon_round_up_switch;
      ImageView iconRoundUpSwitch = ViewBindings.findChildViewById(rootView, id);
      if (iconRoundUpSwitch == null) {
        break missingId;
      }

      id = R.id.icon_service_question;
      ImageView iconServiceQuestion = ViewBindings.findChildViewById(rootView, id);
      if (iconServiceQuestion == null) {
        break missingId;
      }

      id = R.id.option_eighteen_percent;
      CheckBox optionEighteenPercent = ViewBindings.findChildViewById(rootView, id);
      if (optionEighteenPercent == null) {
        break missingId;
      }

      id = R.id.option_fifteen_percent;
      CheckBox optionFifteenPercent = ViewBindings.findChildViewById(rootView, id);
      if (optionFifteenPercent == null) {
        break missingId;
      }

      id = R.id.option_twenty_percent;
      CheckBox optionTwentyPercent = ViewBindings.findChildViewById(rootView, id);
      if (optionTwentyPercent == null) {
        break missingId;
      }

      id = R.id.round_up_switch;
      SwitchMaterial roundUpSwitch = ViewBindings.findChildViewById(rootView, id);
      if (roundUpSwitch == null) {
        break missingId;
      }

      id = R.id.service_question;
      TextView serviceQuestion = ViewBindings.findChildViewById(rootView, id);
      if (serviceQuestion == null) {
        break missingId;
      }

      id = R.id.tip_options;
      LinearLayout tipOptions = ViewBindings.findChildViewById(rootView, id);
      if (tipOptions == null) {
        break missingId;
      }

      id = R.id.tip_result;
      TextView tipResult = ViewBindings.findChildViewById(rootView, id);
      if (tipResult == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, calculateButton, costOfService,
          costOfServiceEditText, desc, descEditText, iconCostOfService, iconDesc, iconRoundUpSwitch,
          iconServiceQuestion, optionEighteenPercent, optionFifteenPercent, optionTwentyPercent,
          roundUpSwitch, serviceQuestion, tipOptions, tipResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
